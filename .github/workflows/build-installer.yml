# Deploy manually

name: Build Windows Installer

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-installer:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout installer builder repo
        uses: actions/checkout@v2
        with:
          repository: christian-monch/datalad-gooey-windows-installer
          path: datalad-gui-windows-installer
          fetch-depth: 0

      - name: Build installer
        run: |
          cd datalad-gui-windows-installer
          $build_out = .\build_windows_installer.ps1
          $build_time = Get-Date -format yyyyMMddHHmm
          $build_branch = echo $build_out|Select-String -Pattern "installed_version:"
          $build_branch = $build_branch.ToString().Substring(19)
          echo "build_id=$build_time-$build_branch" >> ${env:GITHUB_ENV}
        shell: powershell

      - name: Create installer release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.build_id }}
          tag_name: tag-${{ env.build_id }}
          body_path: datalad-gui-windows-installer/CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: Upload installer artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: datalad-gui-windows-installer/datalad-gooey-installer-amd64.exe
          asset_name: datalad-gooey-installer-amd64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
